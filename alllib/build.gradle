apply plugin: 'com.android.library'
// 依赖插件脚本

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion Integer.parseInt(project.minSdkVersion)
        targetSdkVersion Integer.parseInt(project.targetSdkVersion)
        multiDexEnabled true
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
//        ndk {
//            //选择要添加的对应cpu类型的.so库。
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a','x86', 'x86_64', 'mips', 'mips64'
//            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
//            manifestPlaceholders = [
//                    XG_ACCESS_ID:"2100250470",
//                    XG_ACCESS_KEY:"A1R8TBS289UE",
//            ]
//        }
    }
    useLibrary 'org.apache.http.legacy'
    dataBinding {
        enabled true
    }
    repositories {
        flatDir {
            dirs 'libs', "src/main/libs"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/aidl']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['src/main/libs']

        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    configurations {
//    all*.exclude group: 'com.android.support', module: 'support-v4'
//        all*.exclude group: "com.android.support:support-annotations:21.0.3"
//    resolutionStrategy.force "com.android.support:support-annotations:21.0.3"

    }
    dexOptions {
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "4g"//越大越好
//        incremental true
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'src/main/libs')
    //    compile 'com.squareup.okio:okio:1.13.0'
    compile 'com.android.support:recyclerview-v7:24.1.1'
    //    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.android.support:support-v4:24.1.1'
    provided(name: 'bugly_crashreport_upgrade-1.3.0', ext: 'aar')
    provided(name: 'palette-v7-25.3.1', ext: 'aar')
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    //    //必选
    //    compile 'com.alibaba.mobileim:IMCore:2.0.2.1@aar'
    //    //可选，如果使用SDK的UI必须添加该依赖，如果不使用SDK的UI，完全自己开发UI则无需添加该依赖
    //    compile 'com.alibaba.mobileim:IMKit:2.0.2.1@aar'
    //    //可选，如果使用小视频功能必须添加该依赖，如果不使用小视频功能则无需添加该依赖
    //    compile 'com.alibaba.mobileim:RecorderSDK:1.0.0@aar'
    compile project(':qqshare')
    compile('com.facebook.fresco:fresco:1.3.0') {
        exclude group: 'com.squareup.okhttp3'
    }
    provided 'com.facebook.fresco:animated-webp:1.3.0'
    provided('com.facebook.fresco:webpsupport:1.3.0') {
        exclude group: 'com.squareup.okhttp3'
    }
    // 在 API < 14 上的机器支持 WebP 时，需要添加
    //    compile 'com.facebook.fresco:animated-base-support:1.4.0'
    compile('com.facebook.fresco:imagepipeline-okhttp3:1.3.0') {
        exclude group: 'com.squareup.okhttp3'
    }
    compile project(':viewserver')
    compile project(':twinklingRefreshLaoutlibrary')
}
