apply plugin: 'com.android.application'
//apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'packer'
android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        applicationId "com.squareup.code"
        minSdkVersion Integer.parseInt(project.minSdkVersion)
        targetSdkVersion Integer.parseInt(project.targetSdkVersion)
        versionCode Integer.parseInt(project.versionCode)
        versionName project.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a', 'x86'
        }
    }
    dataBinding {
        enabled true
    }
    signingConfigs {
        debug {
            // No debug config
            storeFile file(project.storeFile)
            storePassword project.storePassword
            keyAlias project.keyAlias
            keyPassword project.keyPassword
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            // No debug config
            storeFile file(project.storeFile)
            storePassword project.storePassword
            keyAlias project.keyAlias
            keyPassword project.keyPassword
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/aidl']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDirs = ['src/main/libs']
            java.srcDirs += ['src/main/kotlin']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    repositories {
        flatDir {
            dirs 'libs', "src/main/libs"
        }
    }
    buildTypes {
        debug {
            minifyEnabled true//混淆编译
            zipAlignEnabled true
            //移除无用的资源文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true//混淆编译
            zipAlignEnabled true
            //移除无用的资源文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    packer {
        archiveNameFormat = '${buildType}-v${versionName}-${channel}'
        archiveOutput = new File(rootDir.absolutePath, "apks")
        channelFile = new File(rootDir.absolutePath, "channels.txt")
    }
    configurations {
//    all*.exclude group: 'com.android.support', module: 'support-v4'
//        all*.exclude group: "com.android.support:support-annotations:21.0.3"
//    resolutionStrategy.force "com.android.support:support-annotations:21.0.3"

    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'src/main/libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //    compile project(':alllib')
    compile(name: 'bugly_crashreport_upgrade-1.3.0', ext: 'aar')
    compile(name: 'palette-v7-25.3.1', ext: 'aar')
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:multidex:1.0.1'
//    compile(name: 'alllib-release', ext: 'aar')
    compile 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    //    //必选
    //    compile 'com.alibaba.mobileim:IMCore:2.0.2.1@aar'
    //    //可选，如果使用SDK的UI必须添加该依赖，如果不使用SDK的UI，完全自己开发UI则无需添加该依赖
    //    compile 'com.alibaba.mobileim:IMKit:2.0.2.1@aar'
    //    //可选，如果使用小视频功能必须添加该依赖，如果不使用小视频功能则无需添加该依赖
    //    compile 'com.alibaba.mobileim:RecorderSDK:1.0.0@aar'
    compile('com.facebook.fresco:fresco:1.3.0') {
        exclude group: 'com.squareup.okhttp3'
    }
    compile 'com.facebook.fresco:animated-webp:1.3.0'
    compile('com.facebook.fresco:webpsupport:1.3.0') {
        exclude group: 'com.squareup.okhttp3'
    }
    // 在 API < 14 上的机器支持 WebP 时，需要添加
    //    compile 'com.facebook.fresco:animated-base-support:1.4.0'
    compile('com.facebook.fresco:imagepipeline-okhttp3:1.3.0') {
        exclude group: 'com.squareup.okhttp3'
    }
    //        compile 'com.android.support:multidex:1.0.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile('junit:junit:4.12') {
        exclude group: 'com.google.guava'
    }
    testCompile('org.mockito:mockito-core:1.9.5') {
        exclude group: 'com.google.guava'
    }
    testCompile 'org.robolectric:robolectric:3.4-rc4'
    testCompile 'org.robolectric:supportv4:3.4-rc4'
    testCompile 'org.robolectric:resources:3.4-rc4'
    testCompile 'org.robolectric:multidex:3.4-rc4'
    testCompile('org.robolectric:annotations:3.4-rc4') {
        exclude group: 'com.google.guava'
    }
    testCompile 'org.mockito:mockito-core:2.8.47'
    //    annotationProcessor  'com.google.dagger:dagger-compiler:2.11'
    //    compile 'com.google.dagger:dagger:2.11'
    //    provided 'org.glassfish:javax.annotation:10.0-b28'
    compile project(':qqshare')
    compile project(':alllib')
}
// 依赖插件脚本
//apply from: 'tinker-support.gradle'